--------------------------------------------------------------
2. Natours Project — Setup and First Steps (Part 1)
--------------------------------------------------------------
3 -
    clip-path: polygan(x y, x y , ...);

4 -
    how to center everything:

        position:absolute;
        top:50%;
        left:50%;
        transform:translate(-50%,-50%)


5 - Animation keyframe



    @keyframe moveToRight{
        0%{
        }
        80%{
        }
        100{
        }

    }

    .btn{
        animation-name: moveToRight;
        animation-duration: 1s;
        animation-timing-function: ease-out;
        or:
        animation: moveToRight 1s ease-out (10s);
    }
  /*to avoid vibrate or flutter (at the end of animation motion it have a bit jump*/

    animation-fill-mode:backwards;
6


--------------------------------------------------------------
3. How CSS Works A Look Behind the Scenes
--------------------------------------------------------------


4:
    priority in css

    (inline, id, class, tagName)


5:

6: rem em vh wh

7:  Inheritence in css

8:
    html:
        62.5 % ==> 10px = 1rem

    *,
    *::after,
    *::before{
    box-sizing: inherit;
    }
    body{
        box-sizing: border-box;
    }

10:
    BEM:
        block element modifier

        .block{}
        .block__element{}
        .bolock__element--modifier{}

    the 7-1 pattern:
        7 different folder for partial Sass files, and 1 main Sass file to import all other files into a compile CSS stylesheet


        The 7 folders:
            . base/
            . components/
            . layout/
            . pages/
            . themes/
            . abstracts/
            . vendors/


--------------------------------------------------------------
4. Introduction to Sass and NPM
--------------------------------------------------------------
 you can use // for comment in sass
 sass and scss are same but scss use {} and sass use indent;

3:

    define variables:
        $color-primary:#333;
        $color-secondary:..;
        $color-tertiary:...;
        $color-text-dark:...;
        $width-button 150px

    & operator

    .btn-main{
        &:link{}
        &:hover{}

    }

    darken -- lighten
    background-color:darken($color-secondary, 15%)
    background-color:($color-secondary, 15%)


4:
    mixin -- include -- reusable
    piece of code  -- pass argument to mixin
    function return *
    extend placeholder %

    mixin:
        @mixin style-link-text($col){
            text-decoration:none;
            text-transform: uppercase;
            color:$col;
        }

    use:

        a{

            @include style-link-text($color-primary)

        }

    function:

        @function divided($a, $b){
            @return $a / $b
        }


        use:

        nav{
            margin:divided(60,2) * 1px; //30px
        }


    %btn-placeholder{
        1...
        2...
        3...
        ...
    }

    .btn-main{
        &:link{
        @extend %btn-placeholder

        }
    }

     .btn-hot{
        &:link{
        @extend %btn-placeholder

        }
    }


    it different with mixin in css export

    .btn-main:link,
    .btn-hot:link{
        1...
        2...
        3...
        4...

    }

    but in mixin the code copied in each section separately;

5: Command line
6: npm:

    npm init
    npm install node-sass --save-dev


7:
    config sass

    package.json:

        "scripts":{
            "compile:sass":"node-sass sass/main.scss css/style.css -w"

        }

    add -w flag to watch changes as soon as possible


    npm run compile:sass



--------------------------------------------------------------
5. Natours Project — Using Advanced CSS and Sass (Part 2)
--------------------------------------------------------------


5:

    clear fix:

    write it in _mixins.scss:

    @mixin clearfix{
        content:'';
        display:tabel;
        clear:both;
    }

    not -- last-child

    &:not(:last-child){
        ...
    }


    calc -- #

    use `#{$variables}` if you want use variables in `calc`

    width: calc(100% - #{${variables});



    ^ -- *

    select attribute with ^ or *

    use ^ -->> for started with specific word
    use * -->> for content a specific word

    [class^='col-]
    or
    [alt*='color']


6: use linear gradient for text (web kit background clip)

    // Step1
    background-image: linear(to right, red, blue)

    // step2 --> background clip except somewhere we have text
    -webkit-background-clip:text;

    //step3 transparent color of text
    //so the you can see the color of background
    color:transparent



    skewX skewY

    transform: skewX(2deg)


7:

8:

    outline: 2px solid #000

    outline-offset: 10px;



    how can change the item not hover
    &:hover &__photo:not(:hover)
9:

10:

    backface-visibility:hidden;

    card front back

    perspective: 100rem;
    -moz-perspective: 100rem;
11
    background-blend-mode:screen;

    box-decoration-break: clone;
        --> every line is considered as a separate box  when line break and rest of text go to next line;


12:



13:14:15
//TODO shape

video tag

    <video>

      <div class="bg-video">
            <video  class="bg-video__content" autoplay loop muted>
                <source src="./img/video.mp4" type="video/mp4">
                <source src="./img/video.webm" type="video/webm">
                Your browser is not supported.
            </video>
        </div>

    video loopt autoplay muted type="video/mp4"



    object-fit:cover // --> like backgroung-size:cover for images


16

 linear-grdiant(105deg, white 0%, white 50%, red 50%, red 100%)

 :placeholder-shown  --> show style when placeholder shown

 ~ --> sibling selector
 + --> next sibling selector (adjacent selector)

 input sudo:

    :focus
    :focus:invalid
     &::-webkit-input-placeholder


 radio type:

    :checked






23:24:


parent"
    display:table;
child:
    display:table-cell;
    vertical-align:center;


    text pargraph column hyphens

    column-count:2;
    column-gap:4rem;
    column-rule:1px solid $

    hyphens:auto //manual


--------------------------------------------------------------
6. Natours Project — Advanced Responsive Design (Part 3)
--------------------------------------------------------------

3: mixin content include if

    @mixin respond-phone{
        @media (max-width: 600px){@content} // **
    }

    @include respond-phone{
        font-size:50%; // this copied in @content **
    }



    @mixin respond($breakpoint){
    @if($breakpoint == phone){
        @media (max-width: 600px){@content}
        }
    @if($breakpoint == tab-port{
        @media (max-width: 600px){@content}
        }
    }

5:


